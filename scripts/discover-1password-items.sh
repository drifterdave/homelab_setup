#!/bin/bash

# Script to discover 1Password items and update Terraform variables
# Usage: ./scripts/discover-1password-items.sh

set -e

# Configuration
VAULT_NAME="Homelab"
SERVICES_VAULT="Services"
TFVARS_FILE="terraform.auto.tfvars"

echo "Discovering 1Password items..."

# Discover Kubernetes nodes (items with kubernetes tag)
echo "Discovering Kubernetes nodes..."
KUBERNETES_NODES=$(op item list --vault "$VAULT_NAME" --tags kubernetes --format json | jq -r 'map(.title) | join(", ")')

# Discover DNS records (items with dns tag)
echo "Discovering DNS records..."
DNS_RECORDS=$(op item list --vault "$VAULT_NAME" --tags dns --format json | jq -r 'map(.title) | join(", ")')

# Discover services (all items in Services vault)
echo "Discovering services..."
SERVICES=$(op item list --vault "$SERVICES_VAULT" --format json | jq -r 'map(.title) | join(", ")')

# Format for Terraform variables
if [ -n "$KUBERNETES_NODES" ]; then
    KUBERNETES_NODES_FORMATTED="[\"$(echo "$KUBERNETES_NODES" | sed 's/, /", "/g')\"]"
else
    KUBERNETES_NODES_FORMATTED="[]"
fi

if [ -n "$DNS_RECORDS" ]; then
    DNS_RECORDS_FORMATTED="[\"$(echo "$DNS_RECORDS" | sed 's/, /", "/g')\"]"
else
    DNS_RECORDS_FORMATTED="[]"
fi

if [ -n "$SERVICES" ]; then
    SERVICES_FORMATTED="[\"$(echo "$SERVICES" | sed 's/, /", "/g')\"]"
else
    SERVICES_FORMATTED="[]"
fi

# Update tfvars file
echo "Updating $TFVARS_FILE..."

# Create backup
cp "$TFVARS_FILE" "$TFVARS_FILE.backup.$(date +%Y%m%d_%H%M%S)"

# Update the file
cat > "$TFVARS_FILE" << EOF
# Auto-generated by discover-1password-items.sh
# Last updated: $(date)

# Essential variables
default_email        = "admin@example.com"
default_organization = "My Homelab"
domain_external     = "example.com"
domain_internal     = "internal.example"

# 1Password vault names
onepassword_homelab_vault = "$VAULT_NAME"
onepassword_services_vault = "$SERVICES_VAULT"

# Talos version
talos_version = "v1.8.0"

# Discovered 1Password items
kubernetes_node_titles = $KUBERNETES_NODES_FORMATTED
service_titles = $SERVICES_FORMATTED
dns_record_titles = $DNS_RECORDS_FORMATTED
EOF

echo "âœ… Discovery complete!"
echo ""
echo "ðŸ“Š Summary:"
echo "   - Kubernetes nodes: $(echo "$KUBERNETES_NODES" | wc -w | tr -d ' ')"
echo "   - Services: $(echo "$SERVICES" | wc -w | tr -d ' ')"
echo "   - DNS records: $(echo "$DNS_RECORDS" | wc -w | tr -d ' ')"
echo ""
echo "ðŸ“‹ Next steps:"
echo "1. Review the updated $TFVARS_FILE"
echo "2. Run: tofu plan"
echo "3. Run: tofu apply"
echo ""
echo "ðŸ’¡ To add new items:"
echo "1. Create items in 1Password with proper tags"
echo "2. Run this script again to update variables"
echo "3. Run: tofu apply"
